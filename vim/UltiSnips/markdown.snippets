# Head
snippet head "hugo head descriptions" b
---
categories: ["${1: Tech}"]
tags: ["${2:Linux}"]
title: "`!v expand('%')`"
date: `date +"%Y-%m-%d"`T00:00:00+08:00
draft: ${3:true}
---
endsnippet

# Image 
global !p 
def img_count():
    try:
        with open(vim.eval('expand("%:p")'),'r') as f:
            data = f.read()
            count = data.count('/post/img/')
        return count+1
    except:
        return "Please save current file first" # File Not Exist
endglobal

snippet img "insert an image" b
![img`!p snip.rv = img_count()`](/post/img/`!p snip.rv = snip.basename`_`!p snip.rv = img_count()`.png)
endsnippet


# Reference
global !p 
import os
def ref_name():
    try:
        content = os.popen("xclip -o").read()
        if(content[-1] == "/"):
            name = content.split("/")[-2]
        else:
            name = content.split("/")[-1]
    except:
        name = "Failed"
    return name
endglobal

snippet ref "insert refernce" i
[^`!p snip.rv = ref_name()`]
[^`!p snip.rv = ref_name()`]:[`!p snip.rv = ref_name()`](`xclip -o`)

endsnippet

# Link
snippet link "set a link" i
[${VISUAL}](`xclip -o | sed '/^\s*$/d'`) 
endsnippet

# Table Insert
global !p
def table_insert(row,column):
    content=""
    for r in range(1,row+3):
        for c in range(1,column+1):
            if(r==2):
                element=":---:"
            else:
                element=" "+str(c)+" "
            content+="|"+element	
        content+="|\n"
    return content
endglobal

snippet "table(\d+)x(\d+)" "expand a table (row)x(column)" r 
`!p snip.rv = table_insert(int(match.group(1)),int(match.group(2)))`
endsnippet

# Table Transform
global !p 
import re
def table_transform(content):
    out=""
    isLine1=1
    lines = content.split('\n')
    for line in lines:
        cells = re.split(' +',line)
        column = len(cells)
        for cell in cells:
            out+=("| "+cell+" ")
        out+=("|\n")
        if(isLine1==1):
            isLine1=0
            for i in range(1,column+1):
                out+="|:---"
            out+="|\n"
    return out
endglobal

snippet table_transform "transform selected lines to a table" i
`!p snip.rv = table_transform(snip.v.text)`
${VISUAL}
endsnippet

# More
snippet more "insert a hugo more tag" b
<!--more-->
$1
endsnippet

# LaTEX Multiline Euquation
snippet equation "insert a multi-line equation" b
$$\begin{equation}
\begin{aligned}
${1} &= \newline 
&=  
\end{aligned}
\end{equation}$$
endsnippet

